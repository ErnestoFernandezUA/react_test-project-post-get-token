{"version":3,"sources":["utils/axiosClient.ts","store/features/Positions/positionsSlice.ts","api/position.ts","store/features/Token/isTokenActive.ts","store/features/Token/tokenSlice.ts","api/token.ts","api/users.get.ts","store/features/Users/usersSlice.ts","api/users.post.ts","store/features/Options/optionsSlice.ts","store/index.ts","store/hooks.ts","UI/Button/Button.tsx","images/logo.svg","components/Header/Header.tsx","components/Container/Container.tsx","components/Wrapper/Wrapper.tsx","components/ArticlePromo/ArticlePromo.tsx","style/breakpoints.ts","components/Card/Card.tsx","components/List/List.tsx","components/ArticleGet/ArticleGet.tsx","helpers/widthContentColumns.ts","style/variables.ts","UI/Input/Input.tsx","components/Form/Form.tsx","components/ArticlePost/ArticlePost.tsx","pages/HomePage/HomePage.tsx","pages/NotFound.tsx","App.tsx","helpers/getTypeScreen.ts","index.tsx"],"names":["baseURL","instance","axios","create","client","url","console","log","get","response","data","config","post","initialState","storage","statusLoading","error","getPositionsAsync","createAsyncThunk","_","a","rejectWithValue","positionsSlice","createSlice","name","reducers","addPositions","state","action","push","payload","setPositionsStatus","setPositionsError","resetPositionsState","extraReducers","builder","addCase","pending","fulfilled","success","positions","rejected","actions","selectPositions","isTokenActive","timeOfLastSet","activeDuration","currentTime","Date","now","isActive","Math","floor","currentRequestId","getTokenAsync","getState","requestId","token","tokenSlice","setToken","setStatus","setError","resetToken","meta","getUsersPage","link","page","count","link_to_next_page","current_page","total_pages","fails","email","phone","images","position_id","getUsersAsync","delay","Promise","resolve","setTimeout","postUserAsync","user","formData","FormData","append","body","headers","Token","String","postUser","usersSlice","addUsers","addPayload","length","resetState","users","next_url","links","selectUsers","selectPayloadUsers","selectUsersStatusLoading","selectUsersError","selectLinkToNext","selectIsLastPage","selectPostFails","screen","optionsSlice","setScreen","resetOptionsState","selectScreen","options","rootReducer","combineReducers","tokenReducer","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","Button","className","disabled","children","onClick","width","classNames","style","onKeyDown","Header","type","scroll","scrollToTop","src","Logo","alt","activeClass","to","spy","smooth","duration","Container","Wrapper","ArticlePromo","breakpoint","Card","photo","position","maxWidthContent","maxWidth","border","List","ArticleGet","divRef","useRef","dispatch","payloadUsers","isLoading","isLastPage","useState","setMaxWidthContent","useEffect","window","innerWidth","widthContentColumns","current","scrollIntoView","behavior","map","id","ref","variablesCss","Input","label","value","helper","errors","onChange","htmlFor","placeholder","Form","setName","setEmail","setPhone","setPositionId","setImages","isUploading","setIsUploading","inputRef","maxWidthErrors","setMaxWidthErrors","widthImportErrors","handleClick","click","handleUpload","e","target","backgroundColor","p","visibility","files","accept","multiple","Array","from","image","URL","createObjectURL","ArticlePost","HomePage","NotFound","App","getTypeScreen","top","left","zIndex","innerHeight","localStorage","clear","router","createHashRouter","path","element","errorElement","ReactDOM","createRoot","document","getElementById","render","loading"],"mappings":"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","file":"static/js/main.633279cc.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    const response = await instance.get<T>(url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData, config: any) {\n    // eslint-disable-next-line no-console\n    console.log('post', baseURL + url, data);\n\n    const response = await instance.post<T>(url, data, config);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../../index';\nimport { getPositions } from '../../../api/position';\nimport { PositionType } from '../../../type/Position';\n\nexport interface PositionsState {\n  storage: PositionType[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PositionsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPositionsAsync = createAsyncThunk(\n  'users/getPositions',\n  async (_, { rejectWithValue }) => {\n    let response;\n\n    try {\n      response = await getPositions();\n    } catch (error) {\n      rejectWithValue(error);\n    }\n\n    return response;\n  },\n);\n\nconst positionsSlice = createSlice({\n  name: 'positions',\n  initialState,\n  reducers: {\n    addPositions: (state: PositionsState, action: PayloadAction<PositionType[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setPositionsStatus: (\n      state: PositionsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setPositionsError: (\n      state: PositionsState,\n      action: PayloadAction<unknown>,\n    ) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetPositionsState: () => {\n      return initialState;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPositionsAsync.pending,\n        (state: PositionsState) => {\n          state.statusLoading = 'loading';\n        })\n      .addCase(getPositionsAsync.fulfilled,\n        (state, action) => {\n          state.statusLoading = 'idle';\n\n          if (action.payload && action.payload.success) {\n            // always overwriting previous storage\n            state.storage = action.payload.positions;\n          }\n        })\n      .addCase(getPositionsAsync.rejected, (state) => {\n        state.statusLoading = 'failed';\n      });\n  },\n});\n\nexport default positionsSlice.reducer;\nexport const {\n  setPositionsStatus,\n  setPositionsError,\n  resetPositionsState,\n} = positionsSlice.actions;\n\nexport const selectPositions = (state: RootState) => state.positions.storage;\nexport const selectPositionsStatusLoading = (state: RootState) => state.positions.statusLoading;\nexport const selectPositionsError = (state: RootState) => state.positions.error;\n","import { PositionType } from '../type/Position';\nimport { client } from '../utils/axiosClient';\n\nexport interface PositionsResponse {\n  success: boolean;\n  positions: PositionType[];\n}\n\nexport const getPositions = () => client.get<PositionsResponse>('/positions');\n","export const isTokenActive = (\n  timeOfLastSet: number | null,\n  activeDuration: number, // min\n) => {\n  const currentTime = Date.now();\n\n  if (timeOfLastSet) {\n    const isActive = currentTime - timeOfLastSet < activeDuration * 60 * 1000;\n\n    // eslint-disable-next-line no-console\n    console.log(\n      'selectTokenIsExpired/ time from last:',\n      Math.floor((currentTime - timeOfLastSet) / 1000 / 60), 'min,',\n      'is token active? ', isActive,\n    );\n\n    return isActive;\n  }\n\n  return false;\n};\n","/* eslint-disable consistent-return */\n/* eslint-disable no-param-reassign */\nimport {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { getToken, TokenResponse } from '../../../api/token';\n// eslint-disable-next-line import/no-cycle\nimport {\n  RootState,\n} from '../..';\nimport { isTokenActive } from './isTokenActive';\n\nconst TOKEN_ACTIVE_DURATION = 40; // min\n\nexport interface TokenState {\n  storage: string | null;\n  currentRequestId: string | null;\n  timeOfLastSet: number | null;\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: TokenState = {\n  storage: null,\n  currentRequestId: null,\n  timeOfLastSet: null,\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getTokenAsync = createAsyncThunk(\n  'token/fetchToken',\n  async (_, {\n    rejectWithValue,\n    getState,\n    requestId,\n  }) => {\n    try {\n      const state = getState() as RootState;\n\n      const isActive = isTokenActive(state.token.timeOfLastSet, TOKEN_ACTIVE_DURATION);\n\n      if (requestId === state.token.currentRequestId && !isActive) {\n        const response: TokenResponse = await getToken();\n\n        return response;\n      }\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nconst tokenSlice = createSlice({\n  name: 'token',\n  initialState,\n  reducers: {\n    setToken: (state: TokenState, action: PayloadAction<TokenResponse>) => {\n      state.storage = action.payload.token;\n    },\n    setStatus: (\n      state: TokenState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (\n      state: TokenState,\n      action: PayloadAction<unknown>,\n    ) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetToken: () => {\n      return initialState;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getTokenAsync.pending, (\n        state: TokenState,\n        { meta: { requestId } },\n      ) => {\n        state.statusLoading = 'loading';\n        state.error = null;\n\n        if (!state.currentRequestId) {\n          state.currentRequestId = requestId;\n        }\n      })\n      .addCase(getTokenAsync.fulfilled,\n        (state, action: PayloadAction<TokenResponse | undefined>) => {\n          if (action.payload) {\n            state.storage = action.payload.token;\n            state.timeOfLastSet = Date.now();\n          }\n\n          state.statusLoading = 'idle';\n          state.currentRequestId = null;\n        })\n      .addCase(getTokenAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n        state.error = action.payload;\n      });\n  },\n});\n\nexport default tokenSlice.reducer;\nexport const {\n  setToken,\n  setStatus,\n  setError,\n  resetToken,\n} = tokenSlice.actions;\n\nexport const selectToken = (state: RootState) => state.token.storage;\nexport const selectTokenStatusLoading = (state: RootState) => state.token.statusLoading;\nexport const selectTokenError = (state: RootState) => state.token.error;\nexport const selectIsTokenExpired\n= (state: RootState) => isTokenActive(state.token.timeOfLastSet, TOKEN_ACTIVE_DURATION);\n","import { client } from '../utils/axiosClient';\n\nexport type TokenResponse = {\n  success: boolean,\n  token: string,\n};\n\nexport const getToken = () => client.get<TokenResponse>('/token');\n","import { UserType } from '../type/User';\nimport { client } from '../utils/axiosClient';\n\nexport type GetUsersParams = {\n  link_to_next_page?: string | null;\n  page?: number;\n  count?: number;\n  delay?: number;\n};\n\nexport type GetUsersResponse = {\n  count: number | null;\n  links: {\n    next_url: string | null;\n    prev_url: string | null;\n  },\n  page: number | null;\n  success: boolean;\n  total_pages: number | null;\n  total_users: number | null;\n  users: UserType[];\n};\n\nexport const getAllUsers = () => client.get('/users');\nexport const getUserById = (userId: number) => client.get(`/users/${userId}`);\nexport const getUsersPage = (\n  link: string | null,\n  page: number,\n  count: number,\n) => client.get<GetUsersResponse>(link || `/users?page=${page}&count=${count}`);\n","/* eslint-disable consistent-return */\n/* eslint-disable no-param-reassign */\nimport {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport {\n  RootState,\n} from '../../index';\nimport { UserType } from '../../../type/User';\nimport { getUsersPage, GetUsersParams, GetUsersResponse } from '../../../api/users.get';\n// import { getTokenAsync } from '../Token/tokenSlice';\nimport {\n  postUser,\n  // PostUserResponse,\n} from '../../../api/users.post';\n// import axios from 'axios';\n\nconst DELAY_OF_WAITING = 5000;\n\nexport interface UsersState {\n  storage: UserType[];\n  payload: UserType[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: string | null;\n\n  link_to_next_page: string | null;\n  current_page: number | null;\n  total_pages: number | null;\n  positions: string[];\n\n  fails: {\n    name: string[] | null;\n    email: string[] | null;\n    phone: string[] | null;\n    images: string[] | null;\n    position_id: string[] | null;\n  }\n}\n\nconst initialState: UsersState = {\n  storage: [],\n  payload: [],\n  statusLoading: 'idle',\n  error: null,\n\n  link_to_next_page: null,\n  current_page: null,\n  total_pages: null,\n  positions: [],\n\n  fails: {\n    name: null,\n    email: null,\n    phone: null,\n    images: null,\n    position_id: null,\n  },\n};\n\nexport const getUsersAsync = createAsyncThunk(\n  'users/fetchUsers',\n  async ({\n    link_to_next_page = null,\n    page = 1,\n    count = 6,\n    delay = DELAY_OF_WAITING,\n  }:GetUsersParams,\n  { rejectWithValue }) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, delay));\n      const response = await getUsersPage(link_to_next_page, page, count);\n\n      return response;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\n// reqex validation\n\nexport const postUserAsync = createAsyncThunk(\n  'users/postUser',\n  async ({\n    user: {\n      name,\n      email,\n      phone,\n      images,\n      position_id,\n    },\n    delay = 1000,\n  }: any,\n  {\n    // dispatch,\n    getState,\n    rejectWithValue,\n  }) => {\n    // eslint-disable-next-line no-console\n    console.log('postUserAsync', position_id);\n\n    try {\n      const state = getState() as RootState;\n\n      // eslint-disable-next-line no-console\n      console.log('state.token.storage', state.token.storage);\n      await new Promise(resolve => setTimeout(resolve, delay));\n      // await dispatch(getTokenAsync());\n\n      const formData = new FormData();\n\n      formData.append('position_id', position_id);\n      formData.append('name', name);\n      formData.append('email', email);\n      formData.append('phone', phone);\n      formData.append('photo', images[0]);\n\n      // 1 - not work\n      // eslint-disable-next-line no-console\n      console.log(formData);\n\n      const response = await postUser(\n        {\n          body: formData,\n          headers: {\n            Token: String(state.token.storage),\n          },\n        },\n      );\n\n      // 2 - not work\n      // const response = await axios({\n      //   url: 'https://frontend-test-assignment-api.abz.agency/api/v1/users',\n      //   method: 'POST',\n      //   headers: {\n      //     'Token': String(state.token.storage),\n      //     'Accept': 'application/json',\n      //     'Content-Type': 'application/json',\n      //     // 'Authorization': 'Bearer ' + credentials.t\n      //   },\n      //   data: formData,\n      // })\n\n      // 3 - work but fetch\n      // const response = await fetch('https://frontend-test-assignment-api.abz.agency/api/v1/users',\n      //   {\n      //     method: 'POST',\n      //     body: formData,\n      //     headers: {\n      //       'Token': String(state.token.storage),\n      //     },\n      //   }\n      // ).then((res) => res.json());\n\n      // eslint-disable-next-line no-console\n      console.log('postUserAsync/ response', response);\n\n      return response;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nconst usersSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    addUsers: (state: UsersState, action: PayloadAction<UserType[]>) => {\n      state.storage.push(...action.payload);\n    },\n    addPayload: (state: UsersState) => {\n      state.storage.push(...state.payload);\n      state.payload.length = 0;\n    },\n    setStatus: (\n      state: UsersState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    resetState: () => {\n      return initialState;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getUsersAsync.pending, (\n        state: UsersState,\n      ) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getUsersAsync.fulfilled,\n        (\n          state: UsersState,\n          action:PayloadAction<GetUsersResponse | undefined,\n          string, {arg: GetUsersParams; requestId: string; requestStatus: 'fulfilled';}, never>,\n        ) => {\n          if (action.payload && action.payload.success) {\n            const {\n              users,\n              links: { next_url },\n              total_pages,\n              page,\n            } = action.payload;\n\n            state.payload.push(...users);\n            state.statusLoading = 'idle';\n            state.link_to_next_page = next_url;\n            state.total_pages = total_pages;\n            state.current_page = page;\n          } else {\n            state.error = 'getUsersAsync.fulfilled/ response.success = false';\n          }\n        })\n      .addCase(getUsersAsync.rejected, (state) => {\n        state.statusLoading = 'failed';\n      })\n      .addCase(postUserAsync.pending, (\n        state: UsersState,\n      ) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(postUserAsync.fulfilled, (\n        state,\n        action,\n        //     :PayloadAction<PostUserResponse, string, {\n        //     arg: any;\n        //     requestId: string;\n        //     requestStatus: \"fulfilled\";\n        // }, never>\n      ) => {\n        state.statusLoading = 'idle';\n\n        // eslint-disable-next-line no-console\n        console.log('postUserAsync.fulfilled/ action.payload', action.payload);\n        // state.storage.push(action.payload);\n        if (!action.payload) {\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n\n        // if (action.payload.success) {\n        //   console.log(action.payload.message);\n        // } else {\n        //   state.fails = { ...state.fails, ...action.payload.fails};\n        // }\n      })\n      .addCase(postUserAsync.rejected, (state) => {\n        state.statusLoading = 'failed';\n        // console.log('postUserAsync.rejected');\n      });\n  },\n});\n\nexport default usersSlice.reducer;\nexport const {\n  addUsers,\n  addPayload,\n  setStatus,\n  resetState,\n} = usersSlice.actions;\n\nexport const selectUsers = (state: RootState) => state.users.storage;\nexport const selectPayloadUsers = (state: RootState) => state.users.payload;\nexport const selectUsersStatusLoading = (state: RootState) => state.users.statusLoading;\nexport const selectUsersError = (state: RootState) => state.users.error;\nexport const selectLinkToNext = (state: RootState) => state.users.link_to_next_page;\nexport const selectIsLastPage\n= (state: RootState) => state.users.current_page === state.users.total_pages;\nexport const selectPostFails = (state: RootState) => state.users.fails;\n","import { client } from '../utils/axiosClient';\n\nexport type PostUserResponse = {\n  success: boolean;\n  user_id: number;\n  message: string;\n  fails?: {\n    name: string[],\n    email: string[],\n    phone: string[],\n    position_id: string[],\n    photo: string[],\n  },\n};\n\nexport const postUser = (data: any, config: any) => client.post('/users', data, config);\n","/* eslint-disable no-param-reassign */\nimport {\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../../index';\nimport { ScreenType } from '../../../type/Screen';\n\nexport interface OptionsState {\n  screen: ScreenType | null;\n}\n\nconst initialState: OptionsState = {\n  screen: null,\n};\n\nconst optionsSlice = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    setScreen: (state: OptionsState, action: PayloadAction<ScreenType>) => {\n      state.screen = action.payload;\n    },\n    resetOptionsState: () => {\n      return initialState;\n    },\n  },\n});\n\nexport default optionsSlice.reducer;\nexport const {\n  setScreen,\n  resetOptionsState,\n} = optionsSlice.actions;\n\nexport const selectScreen = (state: RootState) => state.options.screen;\n","/* eslint-disable import/no-cycle */\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport positionsSlice from './features/Positions/positionsSlice';\nimport tokenReducer from './features/Token/tokenSlice';\nimport usersSlice from './features/Users/usersSlice';\nimport optionsSlice from './features/Options/optionsSlice';\n\nconst rootReducer = combineReducers({\n  users: usersSlice,\n  token: tokenReducer,\n  positions: positionsSlice,\n  options: optionsSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['token'],\n  // blacklist: ['posts'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER, 'posts'],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport './Button.scss';\n\ntype AnyFunction = (...args: unknown[]) => unknown;\n\ninterface ButtonProps {\n  className?: string; // External className for position\n  disabled?: boolean;\n  children?: ReactNode;\n  onClick?: AnyFunction;\n  width?: number;\n}\n\nexport const Button: FunctionComponent<ButtonProps> = ({\n  className,\n  disabled = false,\n  children = '',\n  // eslint-disable-next-line no-console\n  onClick = () => console.log('no onClick function'),\n  width,\n}) => {\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      className={classNames('Button',\n        { 'Button--disabled': disabled },\n        className)}\n      onClick={onClick}\n      style={{ width }}\n      onKeyDown={() => {}}\n    >\n      <div className=\"Button__container\">\n        {children}\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.85fd1d96.svg\";","import React, { FunctionComponent } from 'react';\nimport {\n  Link,\n  // DirectLink,\n  // Element,\n  // Events,\n  animateScroll as scroll,\n  // scrollSpy,\n  // scroller,\n} from 'react-scroll';\n\n// import { Container } from '../Container';\n// import { Wrapper } from '../Wrapper/Wrapper';\nimport { Button } from '../../UI/Button/Button';\nimport Logo from '../../images/logo.svg';\n\nimport './Header.scss';\n\nexport const Header: FunctionComponent = () => {\n  const scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  return (\n    <div className=\"Header\">\n\n      {/* <Wrapper> */}\n      <div className=\"Header__container\">\n        <div\n          className=\"Header__logo\"\n        >\n          <button type=\"button\" onClick={scrollToTop}>\n            <img src={Logo} alt=\"Logo\" />\n          </button>\n        </div>\n\n        <div className=\"Header__nav\">\n          <Link activeClass=\"active\" to=\"Get-Component\" spy smooth duration={500}>\n            <Button\n              className=\"Header__button\"\n              disabled={false}\n            >\n              Users\n            </Button>\n          </Link>\n\n          <Button className=\"Header__button\">Sign in</Button>\n        </div>\n      </div>\n      {/* </Wrapper> */}\n\n    </div>\n  );\n};\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport './Container.scss';\n\ninterface ContainerProps {\n  children: ReactNode;\n}\n\nexport const Container: FunctionComponent<ContainerProps> = ({ children }) => {\n  return (\n    <div className=\"Container\">\n      {children}\n    </div>\n  );\n};\n","import React, {\n  FunctionComponent, ReactNode,\n  // useEffect,\n  // useState,\n} from 'react';\n// import { selectScreen } from '../../store/features/Options/optionsSlice';\n// import { useAppSelector } from '../../store/hooks';\n// import { Paddings, wrapperPaddings } from './Wrapper.padding';\nimport './Wrapper.scss';\n\ninterface WrapperProps {\n  children: ReactNode;\n}\n\nexport const Wrapper: FunctionComponent<WrapperProps> = ({\n  children,\n}) => {\n  // const screen = useAppSelector(selectScreen);\n  // const [stylePaddings, setStylePaddings] = useState<Paddings | null>();\n\n  // useEffect(() => {\n  //   if (screen !== null) {\n  //     setStylePaddings({ ...wrapperPaddings[screen] });\n\n  //     // eslint-disable-next-line no-console\n  //     console.log('setStylePaddings');\n  //   }\n  // }, [screen]);\n\n  // eslint-disable-next-line no-console\n  // console.log(screen, stylePaddings);\n\n  return (\n    <div\n      className=\"Wrapper\"\n      // style={{ ...stylePaddings }}\n    >\n      {children}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { FunctionComponent } from 'react';\nimport { Container } from '../Container';\nimport { Button } from '../../UI/Button/Button';\nimport { Wrapper } from '../Wrapper/Wrapper';\nimport './ArticlePromo.scss';\n\nexport const ArticlePromo: FunctionComponent = () => {\n  return (\n    <article className=\"Promo\">\n      <Container>\n        <div className=\"Promo__poster\">\n          <Wrapper>\n            <h1>Test assignment for front-end developer</h1>\n\n            <p>\n              What defines a good front-end developer is one that has skilled knowledge of HTML, CSS, JS with a vast understanding of User design thinking as they&apos;ll be building web interfaces with accessibility in mind. They should also be excited to learn, as the world of Front-End Development keeps evolving.\n            </p>\n\n            <Button className=\"Promo__button\">Sign up</Button>\n          </Wrapper>\n        </div>\n      </Container>\n    </article>\n  );\n};\n","import { ScreenType } from '../type/Screen';\n\ntype BreakpointType = {\n  [screen in ScreenType]: number;\n};\n\nexport const breakpoint: BreakpointType = {\n  mobile: 370, // with scroll\n  tablet: 768,\n  desktop: 1024,\n  fullscreen: 1170,\n};\n","import React, { FunctionComponent } from 'react';\nimport { UserType } from '../../type/User';\nimport './Card.scss';\n\ninterface UserProps {\n  user: UserType;\n  maxWidthContent?: string;\n}\n\nexport const Card: FunctionComponent<UserProps> = ({\n  user: {\n    name, email, photo, phone, position,\n  },\n  maxWidthContent = '',\n}) => {\n  const style = {\n    maxWidth: maxWidthContent,\n    border: '1px solid transparent',\n  };\n\n  return (\n    <div className=\"Card\">\n      <img className=\"Card__photo\" src={photo} alt={photo} />\n      <p className=\"Card__name\" style={style}>{name}</p>\n      <p className=\"Card__position\">{position}</p>\n      <p className=\"Card__email\" style={style}>{email}</p>\n      <p className=\"Card__phone\">{phone}</p>\n    </div>\n  );\n};\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './List.scss';\n\ntype ListProps = {\n  children: ReactNode;\n  className: string;\n};\n\nexport const List: FunctionComponent<ListProps> = ({ children, className }) => {\n  return (\n    <div className={classNames('List', className)}>\n      {children}\n    </div>\n  );\n};\n","import React, {\n  FunctionComponent,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  // Link,\n  // DirectLink,\n  Element,\n  // Events,\n  // animateScroll as scroll,\n  // scrollSpy,\n  // scroller,\n} from 'react-scroll';\nimport classNames from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { widthContentColumns } from '../../helpers/widthContentColumns';\nimport {\n  addPayload,\n  getUsersAsync,\n  selectIsLastPage,\n  selectLinkToNext,\n  selectPayloadUsers,\n  selectUsers,\n  selectUsersError,\n  selectUsersStatusLoading,\n} from '../../store/features/Users/usersSlice';\nimport { Card } from '../Card';\nimport { Container } from '../Container';\nimport { Wrapper } from '../Wrapper/Wrapper';\nimport { List } from '../List';\nimport { Button } from '../../UI/Button/Button';\nimport { UserType } from '../../type/User';\n\nimport './ArticleGet.scss';\n\nexport const ArticleGet: FunctionComponent = () => {\n  const divRef = useRef<HTMLDivElement | null>(null);\n  const dispatch = useAppDispatch();\n  const users = useAppSelector(selectUsers);\n  const payloadUsers = useAppSelector(selectPayloadUsers);\n  const isLoading = useAppSelector(selectUsersStatusLoading);\n  const link_to_next_page = useAppSelector(selectLinkToNext);\n  const isLastPage = useAppSelector(selectIsLastPage);\n  const error = useAppSelector(selectUsersError);\n\n  const [maxWidthContent, setMaxWidthContent] = useState('160px');\n\n  // eslint-disable-next-line no-console\n  console.log(maxWidthContent);\n\n  useEffect(() => {\n    setMaxWidthContent(`${widthContentColumns()}px`);\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (payloadUsers.length > 0) {\n        dispatch(addPayload());\n      }\n    }, 1000);\n\n    if (divRef.current !== null) {\n      divRef.current.scrollIntoView({ behavior: 'smooth' }); // use react-scroll\n    }\n  }, [users.length, payloadUsers, dispatch]);\n\n  return (\n    <article className={classNames('ArticleGet',\n      { 'ArticleGet--first-load': !users.length })}\n    >\n      <Element name=\"Get-Component\">\n        <Container>\n          <Wrapper>\n            <div className=\"ArticleGet__content\">\n              <h2 className=\"ArticleGet__title\">Working with GET request</h2>\n              {error && <p>{error}</p>}\n\n              <List className=\"Get-Component\">\n                {users.map((user: UserType) => (\n                  <Card\n                    key={user.id}\n                    user={user}\n                    maxWidthContent={maxWidthContent}\n                  />\n                ))}\n\n                {payloadUsers.map((user: UserType) => (\n                  <Card\n                    key={user.id}\n                    user={user}\n                    maxWidthContent={maxWidthContent}\n                  />\n                ))}\n              </List>\n\n              {(isLoading === 'loading') && <>Loading .....</>}\n\n              <div className=\"ArticleGet__button-container\">\n                {(!users.length || !isLastPage) && (\n                  <Button\n                    onClick={() => dispatch(getUsersAsync({ link_to_next_page }))}\n                    width={120}\n                  >\n                    Show More\n                  </Button>\n                )}\n              </div>\n\n              <div ref={divRef}></div>\n            </div>\n          </Wrapper>\n        </Container>\n      </Element>\n    </article>\n  );\n};\n","import { breakpoint } from '../style/breakpoints';\n\nexport function widthContentColumns() {\n  const width = window.innerWidth; // with scroll\n\n  // eslint-disable-next-line no-console\n  console.log(width);\n\n  // > 1170: padding 0, gap 29x2, scroll 17\n  // > 1024: padding 60x2, gap 29x2, scroll 17\n  // > 768: padding 32x2, gap 16, scroll 17\n  // > 360: padding 16x2, scroll 17\n  // and padding card 20x2\n\n  switch (true) {\n    case (width > breakpoint.fullscreen):\n      // console.log('>1170');\n      return (1170 - 58) / 3 - 40;\n\n    case (width > breakpoint.desktop):\n      // console.log('>1024');\n      return (width - 120 - 58) / 3 - 40;\n\n    case (width > breakpoint.tablet):\n      // console.log('>768');\n      return (width - 64 - 16) / 2 - 40;\n\n    default:\n      // console.log('<768');\n      return width - 32 - 40 - 17;\n  }\n}\n\nexport function widthImportErrors() {\n  const width = window.innerWidth;\n\n  // eslint-disable-next-line no-console\n  // console.log('width', width);\n\n  // Input mobile (<768) + window paddings 16px: width-32 (<412px)\n  // max-width input for all vp - 380px (>412px)\n  if (width < 412) {\n    return width - 32;\n  }\n\n  return 380;\n}\n","export const variablesCss = {\n  '--fs-sm': 12,\n  '--fs-md': 16,\n  '--fs-h1': 40,\n\n  '--fw-normal': 400,\n  '--lh-sm': 14,\n  '--lh-md': 26,\n  '--lh-h1': 40,\n\n  /* Other */\n  '--yellow': '#F4E041',\n  '--blue': '#00BDD3',\n  '--light-grey': '#F8F8F8',\n  '--bg-color': '#E5E5E5',\n  '--white': '#FFFFFF',\n  '--black': 'rgba(0, 0, 0, 0.87)',\n\n  /* UI */\n  '--button-color': 'rgba(0, 0, 0, 0.87)',\n  '--button-primary-bg': '#F4E041',\n  '--button-hover-bg': '#FFE302',\n  '--button-disabled-bg': '#B4B4B4',\n  '--button-disabled-color': 'rgba(255, 255, 255, 0.87)',\n  '--button-br': '80px',\n  '--button-radii': '4px',\n\n  '--field-border-enabled': '#D0CFCF',\n  '--field-radii': 4,\n  '--field-helper-text': '#7E7E7E',\n  '--field-border-error': 'rgba(203, 61, 64, 1)',\n  '--error-color': '#CB3D40',\n\n  '--card-br': 10,\n};\n","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames';\nimport './Input.scss';\n\ninterface InputProps {\n  label: string;\n  type: 'text' | 'password';\n  value: string;\n  helper?: string;\n  errors: string[] | null;\n  onChange?: (...args: unknown[]) => unknown;\n  backgroundColor?: string;\n  className?: string;\n  maxWidthErrors: number;\n}\n\nexport const Input: FunctionComponent<InputProps> = ({\n  label,\n  type = 'text',\n  value,\n  helper,\n  errors,\n  // eslint-disable-next-line no-console\n  onChange = () => console.log('no input onChange function'),\n  // backgroundColor = 'white',\n  className,\n  // maxWidthErrors,\n}) => {\n  // const styleInput = {\n  //   backgroundColor,\n  // };\n  // const styleLabel = {\n  //   backgroundColor,\n  // };\n  // const styleInput__input = {\n  //   backgroundColor,\n  // };\n  // const styleError = {\n  //   maxWidth: maxWidthErrors,\n  //   border: '1px solid green',\n  // };\n\n  // eslint-disable-next-line no-console\n  // console.log('maxWidthErrors', maxWidthErrors);\n\n  return (\n    <div\n      className={classNames('Input', className)}\n      // style={styleInput}\n    >\n      <label htmlFor=\"input\">\n        {value && (\n          <p\n            className=\"Input__label\"\n            // style={styleLabel}\n          >\n            {label}\n          </p>\n        )}\n\n        <input\n          id=\"input\"\n          type={type}\n          value={value}\n          onChange={onChange}\n          className={classNames('Input__input',\n            { 'Input__input--error': errors?.length })}\n          placeholder={label}\n          // style={styleInput__input}\n        />\n      </label>\n\n      {errors?.length ? (\n        <div className=\"Input__error-container\">\n          {/* {errors.map((e: string) => (\n            <div\n              key={e}\n              className=\"Input__error\"\n              style={styleError}\n            >\n              {e}\n            </div>\n          ))} */}\n        </div>\n      ) : (\n        <p className=\"Input__helpers\">{helper}</p>\n      )}\n\n    </div>\n  );\n};\n","import React, {\n  FunctionComponent,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { selectPositions } from '../../store/features/Positions/positionsSlice';\nimport { getUsersAsync, postUserAsync, selectPostFails } from '../../store/features/Users/usersSlice';\nimport { variablesCss } from '../../style/variables';\nimport { Input } from '../../UI/Input';\n\nimport './From.scss';\nimport { widthImportErrors } from '../../helpers/widthContentColumns';\n\n// const UPLOAD_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1/post';\n\nexport const Form: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const positions = useAppSelector(selectPositions);\n  const fails = useAppSelector(selectPostFails);\n\n  // console.log('Form/ fails = ', fails);\n\n  const [name, setName] = useState('Tom');\n  const [email, setEmail] = useState('tom@valid.et');\n  const [phone, setPhone] = useState('+380955388485');\n  const [position_id, setPositionId] = useState('1');\n  const [images, setImages] = useState<any[]>();\n  const [isUploading, setIsUploading] = useState(false);\n  const inputRef = useRef<any | null>();\n  const [maxWidthErrors, setMaxWidthErrors] = useState(328);\n\n  useEffect(() => {\n    setMaxWidthErrors(widthImportErrors());\n  }, [dispatch]);\n\n  // console.log(positions);\n\n  const handleClick = () => {\n    inputRef.current.click();\n  };\n\n  // const handleUpload1 = async () => {\n  //   setIsUploading(true);\n  //   try {\n  //     // const formData = new FormData();\n  //     // formData.append('Image', images[0]);\n\n  //     // const res = await fetch(UPLOAD_URL, {\n  //     //   method: \"POST\",\n  //     //   body: formData\n  //     // });\n\n  //     // const data = await res.json();\n  //     // console.log(data);\n\n  //     // const { data: { message } } = await axios.post(UPLOAD_URL, formData);\n  //     // alert(message);\n\n  //     // setImages(undefined);\n  //     // inputRef.current.value = \"\";\n\n  //   } catch (error) {\n  //     console.log(error);\n  //   } finally {\n  //     setIsUploading(false);\n  //   }\n\n  // };\n\n  const handleUpload = async () => {\n    setIsUploading(true);\n\n    try {\n      // eslint-disable-next-line no-console\n      console.log('handleUpload',\n        {\n          user: {\n            name, email, phone, images, position_id,\n          },\n        });\n\n      dispatch(postUserAsync({\n        user: {\n          name,\n          email,\n          phone,\n          images,\n          position_id,\n        },\n      }));\n      await dispatch(getUsersAsync({ page: 1, count: 6 }));\n    // eslint-disable-next-line no-empty\n    } catch (error) {\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"Form\">\n      <Input\n        label=\"Your name\"\n        type=\"text\"\n        value={name}\n        // helper=\"Your name\"\n        errors={fails.name}\n        onChange={(e) => setName(e.target.value)}\n        backgroundColor={variablesCss['--bg-color']}\n        className=\"Form__input-name\"\n        maxWidthErrors={maxWidthErrors}\n      />\n      <Input\n        label=\"Email\"\n        type=\"text\"\n        value={name}\n        // helper=\"Email\"\n        errors={['Error1', 'Error2dsdfsdfsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd', 'Error3']}\n        onChange={(e) => setName(e.target.value)}\n        backgroundColor={variablesCss['--bg-color']}\n        className=\"Form__input-email\"\n        maxWidthErrors={maxWidthErrors}\n      />\n\n      <label htmlFor=\"name\">\n        name:&nbsp;\n        <input\n          id=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={(e: any) => setName(e.target.value)}\n        />\n        {fails.name && fails.name.map(e => (\n          <p key={e}>{e}</p>\n        ))}\n      </label>\n      <label htmlFor=\"email\">\n        email:&nbsp;\n        <input\n          id=\"email\"\n          type=\"text\"\n          value={email}\n          onChange={(e: any) => setEmail(e.target.value)}\n        />\n        {fails.email && fails.email.map(e => (\n          <p key={e}>{e}</p>\n        ))}\n      </label>\n\n      <label htmlFor=\"phone\">\n        phone:&nbsp;\n        <input\n          id=\"phone\"\n          type=\"text\"\n          value={phone}\n          onChange={(e: any) => setPhone(e.target.value)}\n        />\n        {fails.phone && fails.phone.map(e => (\n          <p key={e}>{e}</p>\n        ))}\n      </label>\n\n      <label htmlFor=\"positions\">\n        positions:&nbsp;\n        <select\n          id=\"positions\"\n          value={position_id}\n          onChange={(e) => setPositionId(e.target.value)}\n        >\n          {positions.map(p => (\n            <option key={p.id} value={p.id}>{p.name}</option>\n          ))}\n        </select>\n        {fails.position_id && fails.position_id.map(e => (\n          <p key={e}>{e}</p>\n        ))}\n      </label>\n\n      <label htmlFor=\"file\">\n        <div style={{\n          visibility: 'hidden',\n        }}\n        >\n          <input\n            type=\"file\"\n            onChange={(e: any) => setImages(e.target.files)}\n            accept=\"image/*\"\n            ref={inputRef}\n            multiple\n            disabled={isUploading}\n          />\n        </div>\n        {fails.images && fails.images.map(e => (\n          <p key={e}>{e}</p>\n        ))}\n      </label>\n\n      {images?.length ? (\n        <>\n          <div className=\"img-preview\">\n            {Array.from(images).map((image) => (\n              <img alt={image} src={URL.createObjectURL(image)} key={image} />\n            ))}\n          </div>\n          <div className=\"action-buttons\">\n            <button\n              type=\"button\"\n              onClick={handleClick}\n              disabled={isUploading}\n            >\n              Change\n            </button>\n            {/* <button onClick={handleUpload} disabled={isUploading}>Upload</button> */}\n          </div>\n        </>\n      ) : (\n        <button type=\"button\" onClick={handleClick}>Chose Images</button>\n      )}\n\n      <button\n        type=\"button\"\n        onClick={() => handleUpload()}\n        disabled={isUploading}\n      >\n        Post User\n      </button>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { Container } from '../Container';\nimport { Form } from '../Form';\nimport { Wrapper } from '../Wrapper/Wrapper';\n\nimport './ArticlePost.scss';\n\nexport const ArticlePost: FunctionComponent = () => {\n  return (\n    <article className=\"ArticlePost\">\n      <Container>\n        <Wrapper>\n          <h2 className=\"ArticlePost__title\">Working with POST request</h2>\n\n          <Form />\n        </Wrapper>\n      </Container>\n    </article>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { ArticlePromo } from '../../components/ArticlePromo/ArticlePromo';\nimport { ArticleGet } from '../../components/ArticleGet';\nimport { ArticlePost } from '../../components/ArticlePost';\n\nimport './HomePage.scss';\n\nexport const HomePage: FunctionComponent = () => {\n  return (\n    <section className=\"HomePage\">\n      {/* <div style={{ height: '200vh' }}></div> */}\n      <ArticlePromo />\n      <ArticleGet />\n      <ArticlePost />\n    </section>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&apos;t exist.\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport {\n  createHashRouter,\n  Outlet,\n} from 'react-router-dom';\n\nimport { useAppDispatch, useAppSelector } from './store/hooks';\nimport { getTokenAsync } from './store/features/Token/tokenSlice';\nimport { getUsersAsync } from './store/features/Users/usersSlice';\nimport { getPositionsAsync } from './store/features/Positions/positionsSlice';\nimport { Header } from './components/Header';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { NotFound } from './pages/NotFound';\nimport { selectScreen, setScreen } from './store/features/Options/optionsSlice';\nimport { getTypeScreen } from './helpers/getTypeScreen';\n\nlocalStorage.clear();\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const screen = useAppSelector(selectScreen);\n\n  useEffect(() => {\n    dispatch(setScreen(getTypeScreen()));\n    dispatch(getTokenAsync());\n    dispatch(getPositionsAsync());\n  }, []);\n\n  useEffect(() => {\n    if (screen\n      && screen !== 'mobile'\n      && screen !== 'tablet') {\n      dispatch(getUsersAsync({ page: 1, count: 6 }));\n    }\n  }, [dispatch, screen]);\n\n  return (\n    <>\n      <Header />\n\n      <div style={{\n        position: 'fixed',\n        top: '70px',\n        left: '20px',\n        zIndex: 9999,\n      }}\n      >\n        {`window.innerWidth ${window.innerWidth} x window.innerHeight ${window.innerHeight}`}\n      </div>\n\n      <main>\n        <Outlet />\n      </main>\n    </>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'App',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n    ],\n  },\n]);\n","import { breakpoint } from '../style/breakpoints';\n\nexport const getTypeScreen = () => {\n  const width = window.innerWidth;\n\n  switch (true) {\n    case (width > breakpoint.fullscreen):\n      return 'fullscreen';\n\n    case (width > breakpoint.desktop):\n      return 'desktop';\n\n    case (width > breakpoint.tablet):\n      return 'tablet';\n\n    default:\n      return 'mobile';\n  }\n};\n","import React, { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom/client';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\n\nimport store, { persistor } from './store';\nimport { router } from './App';\n\nimport './style/index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}