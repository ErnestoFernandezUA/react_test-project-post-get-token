{"version":3,"sources":["utils/axiosClient.ts","store/features/Positions/positionsSlice.ts","api/position.ts","api/endpointsAPI.ts","store/features/Token/isTokenActive.ts","store/features/Token/tokenSlice.ts","api/token.ts","api/users.get.ts","store/features/Users/usersSliceGet.ts","api/users.post.ts","store/features/Users/usersSlicePost.ts","store/features/Options/optionsSlice.ts","store/store.ts","store/hooks.ts","UI/Button/Button.tsx","images/logo.svg","components/Header/Header.tsx","components/ArticlePromo/ArticlePromo.tsx","style/breakpoints.ts","components/Card/Card.tsx","components/List/List.tsx","components/Loader/Loader.tsx","components/ArticleGet/ArticleGet.tsx","helpers/widthContentColumns.ts","UI/Input/Input.tsx","images/selected.svg","images/notSelected.svg","UI/Radio/Radio.tsx","components/Select/Select.tsx","UI/InputFile/InputFile.tsx","components/Header/maskPhone.ts","style/variables.ts","images/success-image.svg","components/Form/Form.tsx","components/ArticlePost/ArticlePost.tsx","pages/HomePage/HomePage.tsx","pages/NotFound.tsx","App.tsx","helpers/getTypeScreen.ts","index.tsx"],"names":["baseURL","instance","axios","create","client","url","config","console","log","get","response","data","post","initialState","storage","statusLoading","error","getPositionsAsync","createAsyncThunk","_","a","rejectWithValue","success","positions","positionsSlice","createSlice","name","reducers","addPositions","state","action","push","payload","setPositionsStatus","setPositionsError","resetPositionsState","extraReducers","builder","addCase","pending","fulfilled","map","pos","id","String","rejected","actions","selectPositions","endpointAPI","isTokenActive","timeOfLastSet","activeDuration","Boolean","Date","now","Number","currentRequestId","getTokenAsync","getState","requestId","isActive","token","tokenSlice","setToken","setStatus","setError","resetToken","meta","getUsersPage","link","page","count","params","link_to_next_page","current_page","total_pages","errorMessageGet","getUsersAsync","Promise","resolve","setTimeout","usersSliceGet","addUsers","addPayload","length","setStatusLoading","resetUsers","users","next_url","links","selectUsers","usersGet","selectPayloadUsers","selectUsersIsLoading","selectUsersErrorGet","selectLinkToNext","selectIsLastPage","postUser","Token","headers","statusUpLoading","serverMessage","validationFails","email","phone","photo","position_id","postUserAsync","err","usersSlicePost","clearError","key","property","clearAllErrors","clearErrorMessage","addErrorName","addErrorEmail","addErrorPhone","addErrorPhoto","addErrorPosition_Id","message","fails","selectIsUpLoading","usersPost","selectIsPostRejected","selectUsersPostServerMessage","selectPostFails","addError","screen","optionsSlice","setScreen","resetOptionsState","selectScreen","options","rootReducer","combineReducers","tokenReducer","persistConfig","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","Button","tableIndex","disabled","children","onClick","width","className","classNameExternal","current","useRef","trim","split","role","tabIndex","classNames","style","onKeyDown","Header","scrollTo","elem","scroller","duration","delay","smooth","type","scroll","scrollToTop","src","Logo","alt","ArticlePromo","breakpoint","Card","user","position","maxWidthContent","maxWidth","border","List","Loader","ArticleGet","dispatch","payloadUsers","isLoading","isLastPage","window","innerWidth","widthContentColumns","isFirstRender","useEffect","Input","label","value","helper","errors","onChange","onBlur","htmlFor","placeholder","e","Radio","Selected","notSelected","checked","Select","currentValue","classNamesExternal","InputFile","fileName","isDisabled","accept","multiple","hidden","maskPhone","result","i","Math","min","el","includes","variablesCSS","initialUser","undefined","Form","isPostRejected","isUploading","useState","setUser","isPostSuccess","setIsPostSuccess","maxWidthErrors","widthImportErrors","event","target","files","filter","join","unMaskPhone","isValid","isValidInputs","Object","keys","forEach","handleUpload","preventDefault","formData","FormData","append","Success","backgroundColor","ArticlePost","HomePage","NotFound","App","getTypeScreen","router","createHashRouter","path","element","errorElement","ReactDOM","createRoot","document","getElementById","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.ef060f9d.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\n\nconst baseURL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string, config?: AxiosRequestConfig) {\n    // eslint-disable-next-line no-console\n    console.log('instance get', baseURL + url);\n\n    const response = await instance.get<T>(url, config);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData, config: AxiosRequestConfig) {\n    // eslint-disable-next-line no-console\n    console.log('instance post', baseURL + url, data);\n\n    const response = await instance.post<T>(url, data, config);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../../store';\nimport { getPositions, PositionsResponse } from '../../../api/position';\nimport { PositionType } from '../../../type/Position';\n\nexport interface PositionsState {\n  storage: PositionType[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: PositionsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getPositionsAsync = createAsyncThunk(\n  'users/getPositions',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response: PositionsResponse = await getPositions();\n\n      if (response.success) {\n        return response.positions;\n      }\n    } catch (error) {\n      rejectWithValue(error);\n    }\n\n    return [];\n  },\n);\n\nconst positionsSlice = createSlice({\n  name: 'positions',\n  initialState,\n  reducers: {\n    addPositions: (state: PositionsState, action: PayloadAction<PositionType[]>) => {\n      state.storage.push(...action.payload);\n    },\n    setPositionsStatus: (\n      state: PositionsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setPositionsError: (\n      state: PositionsState,\n      action: PayloadAction<unknown>,\n    ) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetPositionsState: () => {\n      return initialState;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPositionsAsync.pending,\n        (state: PositionsState) => {\n          state.statusLoading = 'loading';\n        })\n      .addCase(getPositionsAsync.fulfilled,\n        (state, action) => {\n          state.statusLoading = 'idle';\n\n          state.storage = action.payload.map(\n            pos => ({ ...pos, id: String(pos.id) }),\n          );\n        })\n      .addCase(getPositionsAsync.rejected, (state) => {\n        state.statusLoading = 'failed';\n      });\n  },\n});\n\nexport default positionsSlice.reducer;\nexport const {\n  setPositionsStatus,\n  setPositionsError,\n  resetPositionsState,\n} = positionsSlice.actions;\n\nexport const selectPositions = (state: RootState) => state.positions.storage;\nexport const selectPositionsStatusLoading = (state: RootState) => state.positions.statusLoading;\nexport const selectPositionsError = (state: RootState) => state.positions.error;\n","import { PositionType } from '../type/Position';\nimport { client } from '../utils/axiosClient';\n\nexport interface PositionsResponse {\n  success: boolean;\n  positions: PositionType[];\n}\n\nexport const getPositions = () => client.get<PositionsResponse>('/positions');\n","export const endpointAPI = {\n  token: '/token',\n  users: '/users',\n  positions: '/positions',\n};\n","export const isTokenActive = (\n  timeOfLastSet: number | null,\n  activeDuration: number, // min\n) => Boolean(timeOfLastSet)\n  && Date.now() - Number(timeOfLastSet) < activeDuration * 60 * 1000;\n","/* eslint-disable consistent-return */\n/* eslint-disable no-param-reassign */\nimport {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { getToken, TokenResponse } from '../../../api/token';\n// eslint-disable-next-line import/no-cycle\nimport {\n  RootState,\n} from '../../store';\nimport { isTokenActive } from './isTokenActive';\n\nconst TOKEN_ACTIVE_DURATION = 40; // min\n\nexport interface TokenState {\n  storage: string | null;\n  currentRequestId: string | null;\n  timeOfLastSet: number | null;\n  activeDuration: number;\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n}\n\nconst initialState: TokenState = {\n  storage: null,\n  currentRequestId: null,\n  timeOfLastSet: null,\n  activeDuration: TOKEN_ACTIVE_DURATION,\n  statusLoading: 'idle',\n  error: null,\n};\n\nexport const getTokenAsync = createAsyncThunk(\n  'token/fetchToken',\n  async (_, {\n    rejectWithValue,\n    getState,\n    requestId,\n  }) => {\n    try {\n      const state = getState() as RootState;\n\n      const isActive = isTokenActive(state.token.timeOfLastSet, TOKEN_ACTIVE_DURATION);\n\n      if (requestId === state.token.currentRequestId && !isActive) {\n        const response: TokenResponse = await getToken();\n\n        return response;\n      }\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nconst tokenSlice = createSlice({\n  name: 'token',\n  initialState,\n  reducers: {\n    setToken: (state: TokenState, action: PayloadAction<TokenResponse>) => {\n      state.storage = action.payload.token;\n    },\n    setStatus: (\n      state: TokenState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (\n      state: TokenState,\n      action: PayloadAction<unknown>,\n    ) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetToken: () => {\n      return initialState;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getTokenAsync.pending, (\n        state: TokenState,\n        { meta: { requestId } },\n      ) => {\n        state.statusLoading = 'loading';\n        state.error = null;\n\n        if (!state.currentRequestId) {\n          state.currentRequestId = requestId;\n        }\n      })\n      .addCase(getTokenAsync.fulfilled,\n        (state, action: PayloadAction<TokenResponse | undefined>) => {\n          if (action.payload) {\n            state.storage = action.payload.token;\n            state.timeOfLastSet = Date.now();\n          }\n\n          state.statusLoading = 'idle';\n          state.currentRequestId = null;\n        })\n      .addCase(getTokenAsync.rejected, (state, action) => {\n        state.statusLoading = 'failed';\n        state.error = action.payload;\n      });\n  },\n});\n\nexport default tokenSlice.reducer;\nexport const {\n  setToken,\n  setStatus,\n  setError,\n  resetToken,\n} = tokenSlice.actions;\n\nexport const selectToken = (state: RootState) => state.token.storage;\nexport const selectTokenStatusLoading = (state: RootState) => state.token.statusLoading;\nexport const selectTokenError = (state: RootState) => state.token.error;\nexport const selectIsTokenExpired\n= (state: RootState) => isTokenActive(state.token.timeOfLastSet, TOKEN_ACTIVE_DURATION);\n","import { client } from '../utils/axiosClient';\nimport { endpointAPI } from './endpointsAPI';\n\nexport type TokenResponse = {\n  success: boolean,\n  token: string,\n};\n\nexport const getToken = () => client.get<TokenResponse>(endpointAPI.token);\n","import { UserTypeGet } from '../type/User';\nimport { client } from '../utils/axiosClient';\nimport { endpointAPI } from './endpointsAPI';\n\nexport type GetUsersParams = {\n  link_to_next_page?: string | null;\n  page?: number;\n  count?: number;\n  delay?: number;\n};\n\nexport type GetUsersResponse = {\n  count: number | null;\n  links: {\n    next_url: string | null;\n    prev_url: string | null;\n  },\n  page: number | null;\n  success: boolean;\n  total_pages: number | null;\n  total_users: number | null;\n  users: UserTypeGet[];\n};\n\nexport const getAllUsers = () => client.get(endpointAPI.users);\nexport const getUserById = (userId: number) => client.get(`${endpointAPI.users}/${userId}`);\nexport const getUsersPage = (\n  link: string | null,\n  page: number,\n  count: number,\n) => {\n  return (link)\n    ? client.get<GetUsersResponse>(link)\n    : client.get<GetUsersResponse>(endpointAPI.users, { params: { page, count } });\n};\n","/* eslint-disable consistent-return */\n/* eslint-disable no-param-reassign */\nimport {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../../store';\nimport { UserTypeGet } from '../../../type/User';\nimport { getUsersPage, GetUsersParams, GetUsersResponse } from '../../../api/users.get';\n\nconst DELAY_OF_WAITING_GET = 1000;\n\nexport interface UsersStateGet {\n  storage: UserTypeGet[];\n  payload: UserTypeGet[];\n\n  link_to_next_page: string | null;\n  current_page: number | null;\n  total_pages: number | null;\n\n  statusLoading: 'idle' | 'loading' | 'failed';\n  errorMessageGet: string | null;\n}\n\nconst initialState: UsersStateGet = {\n  storage: [],\n  payload: [],\n\n  link_to_next_page: null,\n  current_page: null,\n  total_pages: null,\n\n  statusLoading: 'idle',\n  errorMessageGet: null,\n};\n\nexport const getUsersAsync = createAsyncThunk(\n  'users/fetchUsers',\n  async ({\n    link_to_next_page = null,\n    page = 1,\n    count = 6,\n  }:GetUsersParams,\n  { rejectWithValue }) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, DELAY_OF_WAITING_GET));\n      const response = await getUsersPage(link_to_next_page, page, count);\n\n      // eslint-disable-next-line no-console\n      console.log(response);\n\n      return response;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nconst usersSliceGet = createSlice({\n  name: 'userGet',\n  initialState,\n  reducers: {\n    addUsers: (state: UsersStateGet, action: PayloadAction<UserTypeGet[]>) => {\n      state.storage.push(...action.payload);\n    },\n    addPayload: (state: UsersStateGet) => {\n      state.storage.push(...state.payload);\n      state.payload.length = 0;\n    },\n    setStatusLoading: (\n      state: UsersStateGet,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    resetUsers: (state) => {\n      state.storage = initialState.storage;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getUsersAsync.pending, (\n        state: UsersStateGet,\n      ) => {\n        state.statusLoading = 'loading';\n      })\n      .addCase(getUsersAsync.fulfilled,\n        (\n          state: UsersStateGet,\n          action:PayloadAction<GetUsersResponse | undefined,\n          string, {arg: GetUsersParams; requestId: string; requestStatus: 'fulfilled';}, never>,\n        ) => {\n          if (action.payload && action.payload.success) {\n            const {\n              users,\n              links: { next_url },\n              total_pages,\n              page,\n            } = action.payload;\n\n            state.payload.push(...users);\n            state.statusLoading = 'idle';\n            state.link_to_next_page = next_url;\n            state.total_pages = total_pages;\n            state.current_page = page;\n          } else {\n            state.errorMessageGet = 'getUsersAsync.fulfilled/ response.success = false';\n          }\n        })\n      .addCase(getUsersAsync.rejected, (state) => {\n        state.statusLoading = 'failed';\n      });\n  },\n});\n\nexport default usersSliceGet.reducer;\nexport const {\n  addUsers,\n  addPayload,\n  setStatusLoading,\n  resetUsers,\n} = usersSliceGet.actions;\n\nexport const selectUsers = (state: RootState) => state.usersGet.storage;\nexport const selectPayloadUsers = (state: RootState) => state.usersGet.payload;\n\nexport const selectUsersIsLoading = (state: RootState) => state.usersGet.statusLoading === 'loading';\nexport const selectUsersErrorGet = (state: RootState) => state.usersGet.errorMessageGet;\n\nexport const selectLinkToNext = (state: RootState) => state.usersGet.link_to_next_page;\nexport const selectIsLastPage\n= (state: RootState) => state.usersGet.current_page === state.usersGet.total_pages;\n","import { UserPost } from '../type/User';\nimport { client } from '../utils/axiosClient';\nimport { endpointAPI } from './endpointsAPI';\n\nexport type PostResponsePayload = {\n  success: boolean;\n  user_id?: number;\n  message: string;\n  fails?: UserPost<string[]>;\n  type: string;\n};\n\nexport interface PostResponse {\n  payload: PostResponsePayload;\n  error?: {\n    message: string;\n  },\n  meta?: {\n    aborted: boolean;\n    arg: FormData;\n    condition: false;\n    rejectedWithValue: boolean;\n    requestId: string;\n    requestStatus: string;\n  },\n}\n\nexport const postUser = (\n  data: FormData,\n  Token: string,\n) => client.post<PostResponse>(\n  endpointAPI.users,\n  data,\n  { headers: { Token, 'Content-Type': 'multipart/form-data' } },\n);\n","/* eslint-disable consistent-return */\n/* eslint-disable no-param-reassign */\nimport {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n  SerializedError,\n} from '@reduxjs/toolkit';\nimport { AxiosError } from 'axios';\n\n// eslint-disable-next-line import/no-cycle\nimport {\n  RootState,\n} from '../../store';\nimport {\n  postUser,\n} from '../../../api/users.post';\nimport { UserKeys, UserPost } from '../../../type/User';\n\nconst DELAY_OF_WAITING_POST = 1000;\n\nexport interface UsersStatePost {\n  statusUpLoading: 'idle' | 'loading' | 'failed';\n  serverMessage: string | null;\n\n  validationFails: UserPost<string[]>;\n}\n\nconst initialState: UsersStatePost = {\n  statusUpLoading: 'idle',\n  serverMessage: null,\n\n  validationFails: {\n    name: [],\n    email: [],\n    phone: [],\n    photo: [],\n    position_id: [],\n  },\n};\n\nexport const postUserAsync = createAsyncThunk(\n  'usersPost/post',\n  async (data: FormData, { rejectWithValue, getState }) => {\n    const state = getState() as RootState;\n    const token = String(state.token.storage);\n\n    await new Promise(resolve => setTimeout(resolve, DELAY_OF_WAITING_POST));\n\n    try {\n      const response = await postUser(data, token);\n\n      return response;\n    } catch (error) {\n      const err = error as AxiosError;\n\n      return rejectWithValue(err.response?.data);\n    }\n  },\n);\n\nconst usersSlicePost = createSlice({\n  name: 'usersPost',\n  initialState,\n  reducers: {\n    clearError: (state: UsersStatePost, action: PayloadAction<{\n      property: UserKeys,\n    }>) => {\n      const key = action.payload.property;\n\n      state.validationFails[key] = initialState.validationFails[key as keyof\n      UserPost<string[]>] || []; // ts...hm\n    },\n    clearAllErrors: (state) => {\n      state.validationFails = { ...initialState.validationFails };\n    },\n    clearErrorMessage: (state: UsersStatePost) => {\n      state.serverMessage = null;\n    },\n    addErrorName: (state: UsersStatePost, action: PayloadAction<string>) => {\n      state.validationFails.name.push(action.payload);\n    },\n    addErrorEmail: (state: UsersStatePost, action: PayloadAction<string>) => {\n      state.validationFails.email.push(action.payload);\n    },\n    addErrorPhone: (state: UsersStatePost, action: PayloadAction<string>) => {\n      state.validationFails.phone.push(action.payload);\n    },\n    addErrorPhoto: (state: UsersStatePost, action: PayloadAction<string>) => {\n      state.validationFails.photo?.push(action.payload);\n    },\n    addErrorPosition_Id: (state: UsersStatePost, action: PayloadAction<string>) => {\n      state.validationFails.position_id.push(action.payload);\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(postUserAsync.pending, (\n        state: UsersStatePost,\n      ) => {\n        state.statusUpLoading = 'loading';\n        state.serverMessage = null;\n        state.validationFails = initialState.validationFails;\n      })\n      .addCase(postUserAsync.fulfilled, (\n        state,\n        action:PayloadAction<any, string, {\n          arg: FormData;\n          requestId: string;\n          requestStatus: 'fulfilled';\n        }, never>,\n      ) => {\n        // eslint-disable-next-line no-console\n        console.log(action.payload);\n\n        state.statusUpLoading = 'idle';\n        state.serverMessage = action.payload.message;\n      })\n      .addCase(postUserAsync.rejected, (\n        state,\n        action:PayloadAction<any,\n        string, {\n          arg: FormData;\n          requestId: string;\n          requestStatus: 'rejected';\n          aborted: boolean;\n          condition: boolean;\n        } & ({\n          rejectedWithValue: true;\n        } | ({\n          rejectedWithValue: false;\n        } & {})), SerializedError>,\n      ) => {\n        // eslint-disable-next-line no-console\n        console.log('postUserAsync.rejected');\n        // eslint-disable-next-line no-console\n        console.log(action.payload);\n\n        state.statusUpLoading = 'failed';\n        state.serverMessage = action.payload.message;\n        state.validationFails = action.payload.fails || initialState.validationFails;\n      });\n  },\n});\n\nexport default usersSlicePost.reducer;\nexport const {\n  clearError,\n  clearErrorMessage,\n  clearAllErrors,\n  addErrorName,\n  addErrorEmail,\n  addErrorPhone,\n  addErrorPhoto,\n  addErrorPosition_Id,\n} = usersSlicePost.actions;\n\nexport const selectIsUpLoading\n= (state: RootState) => state.usersPost.statusUpLoading === 'loading';\nexport const selectIsPostRejected\n= (state: RootState) => state.usersPost.statusUpLoading === 'failed';\nexport const selectUsersPostServerMessage = (state: RootState) => state.usersPost.serverMessage;\nexport const selectPostFails = (state: RootState) => state.usersPost.validationFails;\n\nexport const addError: UserPost<any> = {\n  name: addErrorName,\n  email: addErrorEmail,\n  phone: addErrorPhone,\n  photo: addErrorPhoto,\n  position_id: addErrorPosition_Id,\n};\n","/* eslint-disable no-param-reassign */\nimport {\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../../store';\nimport { ScreenType } from '../../../type/Screen';\n\nexport interface OptionsState {\n  screen: ScreenType | null;\n}\n\nconst initialState: OptionsState = {\n  screen: null,\n};\n\nconst optionsSlice = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    setScreen: (state: OptionsState, action: PayloadAction<ScreenType>) => {\n      state.screen = action.payload;\n    },\n    resetOptionsState: () => {\n      return initialState;\n    },\n  },\n});\n\nexport default optionsSlice.reducer;\nexport const {\n  setScreen,\n  resetOptionsState,\n} = optionsSlice.actions;\n\nexport const selectScreen = (state: RootState) => state.options.screen;\n","/* eslint-disable import/no-cycle */\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport positionsSlice from './features/Positions/positionsSlice';\nimport tokenReducer from './features/Token/tokenSlice';\nimport usersSliceGet from './features/Users/usersSliceGet';\nimport usersSlicePost from './features/Users/usersSlicePost';\nimport optionsSlice from './features/Options/optionsSlice';\n\nconst rootReducer = combineReducers({\n  usersGet: usersSliceGet,\n  usersPost: usersSlicePost,\n  token: tokenReducer,\n  positions: positionsSlice,\n  options: optionsSlice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['token'],\n  // blacklist: [],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER, 'posts'],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { FunctionComponent, ReactNode, useRef } from 'react';\nimport classNames from 'classnames';\nimport './Button.scss';\n\ninterface ButtonProps {\n  tableIndex?: number;\n  disabled?: boolean;\n  children?: ReactNode;\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  width?: number;\n  className?: string;\n}\n\nexport const Button: FunctionComponent<ButtonProps> = ({\n  tableIndex,\n  disabled = false,\n  children = '',\n  // eslint-disable-next-line no-console\n  onClick = () => console.log('no onClick function'),\n  width,\n  className: classNameExternal = '',\n}) => {\n  const { current } = useRef(classNameExternal.trim().split(' '));\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={tableIndex}\n      className={classNames('Button',\n        { 'Button--disabled': disabled },\n        ...current)}\n      onClick={onClick}\n      style={{ width }}\n      onKeyDown={() => {}}\n    >\n      <div className=\"Button__container\">\n        {children}\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.85fd1d96.svg\";","import React, { FunctionComponent } from 'react';\nimport { animateScroll as scroll, scroller } from 'react-scroll';\n\nimport { Button } from '../../UI/Button/Button';\nimport Logo from '../../images/logo.svg';\n\nimport './Header.scss';\nimport '../../style/Container.scss';\nimport '../../style/Wrapper.scss';\n\nexport const Header: FunctionComponent = () => {\n  const scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  const scrollTo = (elem: string) => {\n    scroller.scrollTo(elem, {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart',\n    });\n  };\n\n  return (\n    <div className=\"Header\">\n      <div className=\"Header__container Container Wrapper\">\n        <div className=\"Header__logo\">\n          <button type=\"button\" onClick={scrollToTop}>\n            <img src={Logo} alt=\"Logo\" />\n          </button>\n        </div>\n\n        <div className=\"Header__nav\">\n          <Button\n            onClick={() => scrollTo('ArticleGet-anchor-head')}\n          >\n            Users\n          </Button>\n\n          <Button\n            onClick={() => scrollTo('ArticlePost')}\n          >\n            Sign up\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { FunctionComponent } from 'react';\nimport { scroller } from 'react-scroll';\n\nimport { Button } from '../../UI/Button/Button';\n\nimport './ArticlePromo.scss';\nimport '../../style/Container.scss';\nimport '../../style/Wrapper.scss';\n\nexport const ArticlePromo: FunctionComponent = () => {\n  const scrollTo = (elem: string) => scroller.scrollTo(elem, {\n    duration: 800,\n    delay: 0,\n    smooth: 'easeInOutQuart',\n  });\n\n  return (\n    <article className=\"Promo Container\">\n      <div className=\"Promo__poster Wrapper\">\n        <h1>Test assignment for front-end developer</h1>\n\n        <p>\n          What defines a good front-end developer is one that has skilled knowledge of HTML, CSS, JS with a vast understanding of User design thinking as they&apos;ll be building web interfaces with accessibility in mind. They should also be excited to learn, as the world of Front-End Development keeps evolving.\n        </p>\n\n        <Button\n          className=\"Promo__button\"\n          width={120}\n          onClick={() => scrollTo('ArticlePost')}\n        >\n          Sign up\n        </Button>\n      </div>\n    </article>\n  );\n};\n","import { ScreenType } from '../type/Screen';\n\ntype BreakpointType = {\n  [screen in ScreenType]: number;\n};\n\nexport const breakpoint: BreakpointType = {\n  mobile: 370, // with scroll\n  tablet: 768,\n  desktop: 1024,\n  fullscreen: 1170,\n};\n","import React, { FunctionComponent, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport { UserTypeGet } from '../../type/User';\n\nimport './Card.scss';\nimport '../../style/Payload.scss';\n\ninterface UserProps {\n  user: UserTypeGet;\n  maxWidthContent?: string;\n  className?: string;\n}\n\nexport const Card: FunctionComponent<UserProps> = ({\n  user: {\n    name, email, photo, phone, position,\n  },\n  maxWidthContent = '',\n  className: classNameExternal = '',\n}) => {\n  const { current } = useRef(classNameExternal.trim().split(' '));\n  const style = {\n    maxWidth: maxWidthContent,\n    border: '1px solid transparent',\n  };\n\n  return (\n    <div className={classNames('Card', ...current)}>\n      <div className=\"Card__container\">\n        <img className=\"Card__photo\" src={photo} alt={photo} />\n        <p className=\"Card__name\" style={style}>{name}</p>\n        <p className=\"Card__position\">{position}</p>\n        <p className=\"Card__email\" style={style}>\n          {email}\n          <span className=\"Card__email--hover\">{email}</span>\n        </p>\n        <p className=\"Card__phone\">{phone}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent, ReactNode, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport './List.scss';\n\ntype ListProps = {\n  children?: ReactNode;\n  className?: string;\n};\n\nexport const List: FunctionComponent<ListProps> = ({\n  children,\n  className: classNameExternal = '',\n}) => {\n  const { current } = useRef(classNameExternal.trim().split(' '));\n\n  return (\n    <div className={classNames('List', ...current)}>\n      {children}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport './Loader.scss';\n\nexport const Loader: FunctionComponent = () => {\n  return (\n    <div className=\"Loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {\n  FunctionComponent,\n  useEffect,\n  useRef,\n} from 'react';\nimport classNames from 'classnames';\nimport { Element, scroller } from 'react-scroll';\n\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { widthContentColumns } from '../../helpers/widthContentColumns';\nimport {\n  addPayload,\n  getUsersAsync,\n  selectIsLastPage,\n  selectLinkToNext,\n  selectPayloadUsers,\n  selectUsers,\n  selectUsersErrorGet,\n  selectUsersIsLoading,\n} from '../../store/features/Users/usersSliceGet';\nimport { Card } from '../Card';\nimport { List } from '../List';\nimport { Button } from '../../UI/Button/Button';\nimport { UserTypeGet } from '../../type/User';\nimport { Loader } from '../Loader';\n\nimport './ArticleGet.scss';\nimport '../../style/Container.scss';\nimport '../../style/Wrapper.scss';\nimport { selectScreen } from '../../store/features/Options/optionsSlice';\n\nexport const ArticleGet: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const users = useAppSelector(selectUsers);\n  const payloadUsers = useAppSelector(selectPayloadUsers);\n  const isLoading = useAppSelector(selectUsersIsLoading);\n  const link_to_next_page = useAppSelector(selectLinkToNext);\n  const isLastPage = useAppSelector(selectIsLastPage);\n  const error = useAppSelector(selectUsersErrorGet);\n  const maxWidthContent = useRef(`${widthContentColumns()}px`);\n  const isFirstRender = useRef(true);\n  const screen = useAppSelector(selectScreen);\n\n  const scrollTo = (elem: string) => scroller.scrollTo(elem, {\n    duration: 500,\n    delay: 0,\n    smooth: 'easeInOutQuart',\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (payloadUsers.length > 0) {\n        dispatch(addPayload());\n\n        if (isFirstRender.current\n          && (screen === 'desktop' || screen === 'fullscreen')) {\n          isFirstRender.current = false;\n        } else {\n          scrollTo('ArticleGet-anchor-bottom');\n        }\n      }\n    }, 350);\n  }, [users.length, payloadUsers, dispatch]);\n\n  return (\n    <article\n      className={classNames('ArticleGet',\n        { 'ArticleGet--first-load': !users.length },\n        'Container',\n        'Wrapper')}\n    >\n      <Element name=\"ArticleGet-anchor-head\" className=\"ArticleGet__anchor-head\"></Element>\n\n      <div className=\"ArticleGet__content\">\n        <h2 className=\"ArticleGet__title\">Working with GET request</h2>\n\n        {error && <p>{error}</p>}\n\n        <List>\n          {users.map((user: UserTypeGet) => (\n            <Card\n              key={user.id}\n              user={user}\n              maxWidthContent={maxWidthContent.current}\n            />\n          ))}\n\n          {payloadUsers.map((user: UserTypeGet) => (\n            <Card\n              className=\"Payload\"\n              key={user.id}\n              user={user}\n              maxWidthContent={maxWidthContent.current}\n            />\n          ))}\n        </List>\n\n        <div\n          className={classNames('ArticleGet__button-container',\n            { 'ArticleGet__button-container--hidden': isLastPage && users.length })}\n        >\n          { isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {(!users.length || !isLastPage) && (\n                <Button\n                  onClick={() => dispatch(getUsersAsync({ link_to_next_page }))}\n                  width={120}\n                  disabled={isLoading}\n                >\n                  Show More\n                </Button>\n              )}\n            </>\n          )}\n        </div>\n\n      </div>\n\n      <Element name=\"ArticleGet-anchor-bottom\" className=\"ArticleGet__anchor-bottom\"></Element>\n    </article>\n  );\n};\n","import { breakpoint } from '../style/breakpoints';\n\nexport function widthContentColumns() {\n  const width = window.innerWidth; // with scroll\n\n  // eslint-disable-next-line no-console\n  // console.log('widthContentColumns/ width', width);\n\n  // > 1170: padding 0, gap 29x2, scroll 17\n  // > 1024: padding 60x2, gap 29x2, scroll 17\n  // > 768: padding 32x2, gap 16, scroll 17\n  // > 360: padding 16x2, scroll 17\n  // and padding card 20x2\n\n  switch (true) {\n    case (width > breakpoint.fullscreen):\n      // console.log('>1170');\n      return (breakpoint.fullscreen - 58) / 3 - 40;\n\n    case (width > breakpoint.desktop):\n      // console.log('>1024');\n      return (width - 120 - 58) / 3 - 40;\n\n    case (width > breakpoint.tablet):\n      // console.log('>768');\n      return (width - 64 - 40) / 2 - 40; // need to correct\n\n    default:\n      // console.log('<768');\n      return width - 32 - 40 - 17;\n  }\n}\n\nexport function widthImportErrors() {\n  const width = window.innerWidth;\n\n  // eslint-disable-next-line no-console\n  // console.log('width', width);\n\n  // Input mobile (<768) + window paddings 16px: width-32 (<412px)\n  // max-width input for all vp - 380px (>412px)\n  if (width < 412) {\n    return width - 32;\n  }\n\n  return 380;\n}\n","import React, { FunctionComponent, useRef } from 'react';\nimport classNames from 'classnames';\nimport './Input.scss';\n\ninterface InputProps {\n  name: string;\n  label: string;\n  type: 'text' | 'password';\n  value: string;\n  helper?: string;\n  errors?: string[];\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  backgroundColor?: string;\n  className?: string;\n  maxWidthErrors: number;\n}\n\nexport const Input: FunctionComponent<InputProps> = ({\n  name,\n  label,\n  type = 'text',\n  value,\n  helper,\n  errors = [],\n  // eslint-disable-next-line no-console\n  onChange = () => console.log('no input onChange function'),\n  // eslint-disable-next-line no-console\n  onBlur = () => console.log('no input onBlur function'),\n  className: classNameExternal = '',\n}) => {\n  const { current } = useRef(classNameExternal.trim().split(' '));\n\n  return (\n    <div\n      className={classNames('Input', ...current)}\n    >\n      <label htmlFor=\"input\">\n        {value && (\n          <p\n            className=\"Input__label\"\n          >\n            {label}\n          </p>\n        )}\n\n        <input\n          name={name}\n          id=\"input\"\n          type={type}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          className={classNames('Input__input',\n            { 'Input__input--error': errors?.length })}\n          placeholder={label}\n        />\n      </label>\n\n      <div className=\"Input__error-container\">\n        {errors?.length ? (\n          <>\n            {errors.map((e: string) => (\n              <div\n                key={e}\n                className=\"Input__error\"\n              >\n                {e}\n              </div>\n            ))}\n          </>\n        ) : (\n          <p className=\"Input__helpers\">{helper}</p>\n        )}\n      </div>\n\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/selected.0e054581.svg\";","export default __webpack_public_path__ + \"static/media/notSelected.1abeeb93.svg\";","import React, { FunctionComponent } from 'react';\nimport { PositionType } from '../../type/Position';\n\nimport Selected from '../../images/selected.svg';\nimport notSelected from '../../images/notSelected.svg';\nimport './Radio.scss';\n\ninterface RadioProps {\n  current: string;\n  position: PositionType;\n  onChange:(event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Radio: FunctionComponent<RadioProps> = ({\n  current,\n  position: {\n    id,\n    name,\n  },\n  onChange,\n}) => {\n  return (\n    <label htmlFor={name} className=\"Radio\">\n      <img\n        src={id === current ? Selected : notSelected}\n        alt=\"name\"\n      />\n      <input\n        id={name}\n        name=\"position_id\"\n        type=\"radio\"\n        value={id}\n        checked={id === current}\n        onChange={onChange}\n        className=\"Select__radio\"\n      />\n      <span>{name}</span>\n    </label>\n  );\n};\n","import React, { FunctionComponent, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport { selectPositions } from '../../store/features/Positions/positionsSlice';\nimport { useAppSelector } from '../../store/hooks';\nimport { PositionType } from '../../type/Position';\nimport { Radio } from '../../UI/Radio';\n\nimport './Select.scss';\n\ninterface SelectProps {\n  currentValue: string,\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  className: string;\n  fails?: string[];\n}\n\nexport const Select: FunctionComponent<SelectProps> = ({\n  currentValue,\n  onChange,\n  className: classNamesExternal = '',\n  fails = [],\n}) => {\n  const positions = useAppSelector(selectPositions);\n  const { current } = useRef(classNamesExternal.trim().split(' '));\n\n  return (\n    <div\n      className={classNames('Select', ...current)}\n    >\n      <p className=\"Select__title\">Select your position:</p>\n\n      {positions.map((position: PositionType) => (\n        <div key={position.id} className=\"Select__radio\">\n          <Radio\n            position={position}\n            current={currentValue}\n            onChange={onChange}\n          />\n        </div>\n      ))}\n\n      <div className=\"Select__errors-container\">\n        {fails && fails.map(e => (\n          <p key={e} className=\"Select__error\">{e}</p>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport './InputFile.scss';\n\ninterface InputFileProps {\n  fileName: string | undefined;\n  isDisabled: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  fails?: string[] | undefined,\n  className?: string;\n}\n\nexport const InputFile: FunctionComponent<InputFileProps> = ({\n  fileName,\n  isDisabled,\n  onChange,\n  fails = [],\n  className: classNameExternal = '',\n}) => {\n  const { current } = useRef(classNameExternal.trim().split(' '));\n\n  return (\n    <>\n      <label\n        htmlFor=\"file\"\n        className={classNames('InputFile',\n          { 'InputFile--error': fails?.length },\n          ...current)}\n      >\n        <div className=\"InputFile__button\">\n          Upload\n        </div>\n        <input\n          id=\"file\"\n          name=\"photo\"\n          type=\"file\"\n          onChange={onChange}\n          accept=\"image/jpg\"\n          multiple={false}\n          disabled={isDisabled}\n          className=\"InputFile__input\"\n          hidden\n        />\n\n        <span className={classNames('InputFile__value',\n          { 'InputFile__value--empty': !fileName })}\n        >\n          {fileName || 'Upload your photo'}\n        </span>\n\n        <div className=\"InputFile__error-container\">\n          {Boolean(fails.length) && fails.map((e: string) => (\n            <p key={e} className=\"InputFile__error\">{e}</p>\n          ))}\n        </div>\n      </label>\n    </>\n  );\n};\n","export const maskPhone = (value = '') => {\n  let result = '+38 ';\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 2; i < Math.min(12, value.length); i++) {\n    const el = value[i];\n\n    if (['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(el)) {\n      if (i === 2) {\n        result += '(';\n      }\n\n      if (i === 5) {\n        result += ')';\n      }\n\n      if ([5, 8, 10].includes(i)) {\n        result += ' ';\n      }\n\n      result += el;\n    } else {\n      return result;\n    }\n  }\n\n  return result;\n};\n\nexport const unMaskPhone = (value: string) => value\n  .split('')\n  .filter((el, i) => (\n    i < 19\n    && el !== ' ' && el !== '(' && el !== ')' && el !== '+'\n  ))\n  .join('');\n","export const variablesCSS = {\n  '--fs-sm': 12,\n  '--fs-md': 16,\n  '--fs-h1': 40,\n\n  '--fw-normal': 400,\n\n  '--lh-sm': 14,\n  '--lh-md': 26,\n  '--lh-h1': 40,\n\n  /* Other */\n  '--yellow': '#F4E041',\n  '--blue': '#00BDD3',\n  '--light-grey': '#F8F8F8',\n  '--bg-color': '#E5E5E5',\n  '--white': '#FFFFFF',\n  '--black': 'rgba(0, 0, 0, 0.87)',\n\n  /* UI */\n  '--button-color': 'rgba(0, 0, 0, 0.87)',\n  '--button-primary-bg': '#F4E041',\n  '--button-hover-bg': '#FFE302',\n  '--button-disabled-bg': '#B4B4B4',\n  '--button-disabled-color': 'rgba(255, 255, 255, 0.87)',\n  '--button-br': '80px',\n  '--button-radii': '4px',\n\n  '--field-border-enabled': '#D0CFCF',\n  '--field-radii': 4,\n  '--field-color-placeholder': '#7E7E7E',\n  '--field-color-border-error': 'rgba(203, 61, 64, 1)',\n  '--error-color': '#CB3D40',\n\n  '--card-br': 10,\n};\n","export default __webpack_public_path__ + \"static/media/success-image.7ae50975.svg\";","import React, {\n  FunctionComponent,\n  useRef,\n  useState,\n} from 'react';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { scroller } from 'react-scroll';\n\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { getTokenAsync } from '../../store/features/Token/tokenSlice';\nimport {\n  getUsersAsync,\n  resetUsers,\n} from '../../store/features/Users/usersSliceGet';\nimport {\n  postUserAsync,\n  selectIsPostRejected,\n  selectPostFails,\n  selectIsUpLoading,\n  selectUsersPostServerMessage,\n  clearErrorMessage,\n  addError,\n  clearError,\n} from '../../store/features/Users/usersSlicePost';\n\nimport { Input } from '../../UI/Input';\nimport { widthImportErrors } from '../../helpers/widthContentColumns';\nimport { Select } from '../Select';\nimport { Button } from '../../UI/Button';\nimport { InputFile } from '../../UI/InputFile';\nimport { PostResponsePayload } from '../../api/users.post';\nimport { Loader } from '../Loader';\n\nimport {\n  maskPhone,\n  unMaskPhone,\n} from '../Header/maskPhone';\nimport { UserKeys, UserPost } from '../../type/User';\n\nimport { variablesCSS } from '../../style/variables';\nimport './From.scss';\nimport '../../style/Wrapper.scss';\nimport Success from '../../images/success-image.svg';\n\nconst initialUser = {\n  name: '',\n  email: '',\n  phone: '',\n  position_id: '',\n  photo: undefined,\n};\n\n// add reqex validation\n\nexport const Form: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const isPostRejected = useAppSelector(selectIsPostRejected);\n  const serverMessage = useAppSelector(selectUsersPostServerMessage);\n  const validationFails = useAppSelector<UserPost<string[]>>(selectPostFails);\n  const isUploading = useAppSelector(selectIsUpLoading);\n  const [user, setUser] = useState<UserPost<string, File | undefined>>(initialUser);\n  const [isPostSuccess, setIsPostSuccess] = useState<boolean>(false);\n  const maxWidthErrors = useRef(widthImportErrors());\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value,\n      files,\n    } = event.target;\n\n    if (validationFails[name as keyof UserPost<string[]>]?.length) {\n      dispatch(clearError({ property: name as UserKeys }));\n    }\n\n    setUser({\n      ...user,\n      // eslint-disable-next-line no-nested-ternary\n      [name]: files\n        ? files[0]\n        : name === 'phone'\n          ? unMaskPhone(value)\n          : value,\n    });\n  };\n\n  const onBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    const key = e.target.name;\n\n    if (!user[key as keyof UserPost<string>]) {\n      dispatch(clearError({ property: key as UserKeys }));\n      dispatch(addError[key as keyof UserPost<string[]>](`The ${key} field is required.`));\n    }\n  };\n\n  const isValid = () => {\n    let isValidInputs = true;\n\n    Object.keys(addError).forEach((key: string) => {\n      dispatch(clearError({ property: key as UserKeys }));\n\n      if (!user[key as keyof UserPost<string>]) {\n        dispatch(addError[key as keyof UserPost<string[]>](`The ${key} field is required.`));\n        isValidInputs = false;\n      }\n    });\n\n    return isValidInputs;\n  };\n\n  const scrollTo = (elem: string) => {\n    scroller.scrollTo(elem, {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart',\n    });\n  };\n\n  const handleUpload = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!isValid()) {\n      return;\n    }\n\n    const {\n      name,\n      email,\n      phone,\n      position_id,\n      photo,\n    } = user;\n\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    formData.append('position_id', position_id);\n    formData.append('photo', photo as File);\n\n    try {\n      dispatch(getTokenAsync());\n\n      const addUserResponse\n      = await dispatch(postUserAsync(formData)) as PayloadAction<PostResponsePayload>;\n\n      if (addUserResponse.payload.success) {\n        setIsPostSuccess(true);\n        dispatch(resetUsers());\n\n        setTimeout(() => {\n          scrollTo('ArticleGet-anchor-head');\n        }, 1000);\n\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n        await dispatch(getUsersAsync({}));\n      }\n    } catch (errorPost) {\n      // eslint-disable-next-line no-console\n      console.log('errorPost', errorPost);\n    } finally {\n      setTimeout(() => {\n        dispatch(clearErrorMessage());\n        setIsPostSuccess(false);\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className=\"Form Wrapper\">\n      {isUploading && (\n        <Loader />\n      )}\n\n      {isPostRejected && (\n        <h2 className=\"Form__server-message\">{serverMessage}</h2>\n      )}\n\n      {isPostSuccess && (\n        <>\n          <h2 className=\"Form__title-success\">{serverMessage}</h2>\n          <img src={Success} alt=\"success\" />\n        </>\n      )}\n\n      {!serverMessage && !isUploading && !isPostSuccess && (\n        <>\n          <Input\n            name=\"name\"\n            label=\"Your name\"\n            type=\"text\"\n            value={user.name}\n            errors={validationFails.name}\n            onChange={onChange}\n            onBlur={onBlur}\n            backgroundColor={variablesCSS['--bg-color']}\n            className=\"Form__input Form__input-name\"\n            maxWidthErrors={maxWidthErrors.current}\n          />\n\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            type=\"text\"\n            value={user.email}\n            errors={validationFails.email}\n            onChange={onChange}\n            onBlur={onBlur}\n            backgroundColor={variablesCSS['--bg-color']}\n            className=\"Form__input Form__input-email\"\n            maxWidthErrors={maxWidthErrors.current}\n          />\n\n          <Input\n            name=\"phone\"\n            label=\"Phone\"\n            type=\"text\"\n            value={maskPhone(user.phone)}\n            helper=\"+38 (XXX) XXX - XX - XX\"\n            errors={validationFails.phone}\n            onChange={onChange}\n            onBlur={onBlur}\n            backgroundColor={variablesCSS['--bg-color']}\n            className=\"Form__input Form__input-phone\"\n            maxWidthErrors={maxWidthErrors.current}\n          />\n\n          <Select\n            currentValue={user.position_id}\n            onChange={onChange}\n            className=\"Form__input\"\n            fails={validationFails.position_id}\n          />\n\n          <InputFile\n            fileName={(user.photo as File)?.name}\n            isDisabled={isUploading}\n            onChange={onChange}\n            fails={validationFails.photo}\n            className=\"Form__input\"\n          />\n\n          <Button\n            onClick={(e:React.FormEvent) => handleUpload(e)}\n            disabled={isUploading}\n          >\n            Sign up\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { Element } from 'react-scroll';\n\nimport { Form } from '../Form';\n\nimport './ArticlePost.scss';\n\nexport const ArticlePost: FunctionComponent = () => {\n  return (\n    <article className=\"ArticlePost\">\n      <Element\n        name=\"ArticlePost\"\n        className=\"ArticlePost__anchor\"\n      >\n      </Element>\n\n      <div className=\"ArticlePost__content\">\n        <h2 className=\"ArticlePost__title\">Working with POST request</h2>\n\n        <Form />\n      </div>\n    </article>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { ArticlePromo } from '../../components/ArticlePromo/ArticlePromo';\nimport { ArticleGet } from '../../components/ArticleGet';\nimport { ArticlePost } from '../../components/ArticlePost';\n\nimport './HomePage.scss';\n\nexport const HomePage: FunctionComponent = () => {\n  return (\n    <section className=\"HomePage\">\n      <ArticlePromo />\n      <ArticleGet />\n      <ArticlePost />\n    </section>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&apos;t exist.\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport {\n  createHashRouter,\n  Outlet,\n} from 'react-router-dom';\n\nimport { useAppDispatch, useAppSelector } from './store/hooks';\nimport {\n  getTokenAsync,\n} from './store/features/Token/tokenSlice';\nimport { getUsersAsync } from './store/features/Users/usersSliceGet';\nimport { getPositionsAsync } from './store/features/Positions/positionsSlice';\nimport { Header } from './components/Header';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { NotFound } from './pages/NotFound';\nimport { selectScreen, setScreen } from './store/features/Options/optionsSlice';\nimport { getTypeScreen } from './helpers/getTypeScreen';\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const screen = useAppSelector(selectScreen);\n\n  useEffect(() => {\n    dispatch(setScreen(getTypeScreen()));\n    dispatch(getTokenAsync());\n    dispatch(getPositionsAsync());\n  }, []);\n\n  useEffect(() => {\n    if (screen\n      && screen !== 'mobile'\n      && screen !== 'tablet') {\n      dispatch(getUsersAsync({}));\n    }\n  }, [dispatch, screen]);\n\n  return (\n    <>\n      <Header />\n\n      {/* <div style={{\n        position: 'fixed',\n        top: '70px',\n        left: '20px',\n        zIndex: 9999,\n      }}\n      >\n        {`window.innerWidth ${window.innerWidth} x window.innerHeight ${window.innerHeight}`}\n      </div> */}\n\n      <main>\n        <Outlet />\n      </main>\n    </>\n  );\n}\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'App',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homepage',\n        errorElement: <>Error on Homepage</>,\n      },\n    ],\n  },\n]);\n","import { breakpoint } from '../style/breakpoints';\n\nexport const getTypeScreen = () => {\n  const width = window.innerWidth;\n\n  switch (true) {\n    case (width > breakpoint.fullscreen):\n      return 'fullscreen';\n\n    case (width > breakpoint.desktop):\n      return 'desktop';\n\n    case (width > breakpoint.tablet):\n      return 'tablet';\n\n    default:\n      return 'mobile';\n  }\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom/client';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\n\nimport store, { persistor } from './store/store';\nimport { router } from './App';\n\nimport './style/index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <RouterProvider router={router} />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}